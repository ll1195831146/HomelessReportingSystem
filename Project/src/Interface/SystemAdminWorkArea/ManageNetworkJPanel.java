/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.network.Country;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.network.City;
import Business.network.State;
/**
 *
 * @author raunak
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageNetworkJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        
        populateTheFirstTable();
        
        
        
    }

    private void populateTheFirstTable() {
        DefaultTableModel model = (DefaultTableModel) networkJTable.getModel();

        model.setRowCount(0);
        for (Country country : system.getCountryList()) {
            Object[] row = new Object[1];
            row[0] = country;
            model.addRow(row);
        }
    }

        private void populateTheSecondTable(Country country) {
        DefaultTableModel model = (DefaultTableModel) tblstate.getModel();

        model.setRowCount(0);
        for (State s : country.getStatelist()) {
            Object[] row = new Object[2];
            row[0] = country;
            row[1] = s;
            model.addRow(row);
        }
    }
        private void populateTheThirdTable(State state) {
        DefaultTableModel model = (DefaultTableModel) tblcity.getModel();

        model.setRowCount(0);
        for (City c : state.getCitylist()) {
            Object[] row = new Object[2];
            row[0] = state;
            row[1] = c;
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnaddcountry = new javax.swing.JButton();
        txtcountryname = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        btndeletecountry = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblstate = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtstate = new javax.swing.JTextField();
        btnaddstate = new javax.swing.JButton();
        btndeletestate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblcity = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        btnaddcity = new javax.swing.JButton();
        btndeletecity = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "CountryName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);
        if (networkJTable.getColumnModel().getColumnCount() > 0) {
            networkJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setText("Name");

        btnaddcountry.setText("Add");
        btnaddcountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcountryActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        btndeletecountry.setText("Delete");
        btndeletecountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletecountryActionPerformed(evt);
            }
        });

        tblstate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CountryName", "StateName"
            }
        ));
        jScrollPane2.setViewportView(tblstate);
        if (tblstate.getColumnModel().getColumnCount() > 0) {
            tblstate.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel2.setText("Name");

        btnaddstate.setText("Add");
        btnaddstate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddstateActionPerformed(evt);
            }
        });

        btndeletestate.setText("Delete");
        btndeletestate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletestateActionPerformed(evt);
            }
        });

        tblcity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "StateName", "CityName"
            }
        ));
        jScrollPane3.setViewportView(tblcity);

        jLabel3.setText("Name");

        btnaddcity.setText("Add");
        btnaddcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcityActionPerformed(evt);
            }
        });

        btndeletecity.setText("Delete");
        btndeletecity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletecityActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Manage Network Work Area:");

        jLabel4.setText("Country:");

        jLabel5.setText("State:");

        jLabel6.setText("City:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(26, 26, 26)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnaddstate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtstate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(btndeletestate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btndeletecity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(btnaddcity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btndeletecountry, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnaddcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcountryname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcountryname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnaddcountry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndeletecountry)))
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnaddstate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndeletestate)))
                .addGap(25, 25, 25)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnaddcity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndeletecity))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(backJButton)
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddcountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcountryActionPerformed

        String name = txtcountryname.getText();
        for(Country c:system.getCountryList()){
            if(name.equals(c.getName())){
            JOptionPane.showMessageDialog(null,"Add country with different name!"); 
            return;
            }
        }
        Country network = system.createAndAddCountry(name);

        populateTheFirstTable();
    }//GEN-LAST:event_btnaddcountryActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btndeletecountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletecountryActionPerformed
        // TODO add your handling code here:
        int selectedrow =networkJTable.getSelectedRow();
        if(selectedrow >=0){
            Country network = (Country)networkJTable.getValueAt(selectedrow, 0);
            system.getCountryList().remove(network);
            JOptionPane.showMessageDialog(null,"Country deleted!");
            populateTheFirstTable();
        }
        else 
            JOptionPane.showMessageDialog(null,"Please select a row first!");
    }//GEN-LAST:event_btndeletecountryActionPerformed

    private void btnaddstateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddstateActionPerformed
          
        // TODO add your handling code here:
        int selectedrow =networkJTable.getSelectedRow();
        if(selectedrow >=0){
            
        Country country = (Country)networkJTable.getValueAt(selectedrow, 0);
        String name = txtstate.getText();
        for(State s:country.getStatelist()){
            if(name.equals(s.getName())){
            JOptionPane.showMessageDialog(null,"Add state with different name!");
            return;
            }
        }
        State state = country.createAndAddState(name);
        
        populateTheSecondTable(country);
        }else
            JOptionPane.showMessageDialog(null,"Please select a row first!");
    }//GEN-LAST:event_btnaddstateActionPerformed

    private void btndeletestateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletestateActionPerformed
        // TODO add your handling code here:
        
        int selectedrow =tblstate.getSelectedRow();
        if(selectedrow >=0){
            State state = (State)tblstate.getValueAt(selectedrow, 1);
            Country country = (Country)tblstate.getValueAt(selectedrow, 0);
            
            country.getStatelist().remove(state);
            JOptionPane.showMessageDialog(null,"State deleted!");
            populateTheSecondTable(country);
        }
        else 
            JOptionPane.showMessageDialog(null,"Please select a row first!");
    }//GEN-LAST:event_btndeletestateActionPerformed

    private void btnaddcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcityActionPerformed
        // TODO add your handling code here:
        int selectedrow =tblstate.getSelectedRow();
        if(selectedrow >=0){
            
        State state = (State)tblstate.getValueAt(selectedrow, 1);
        String name = txtcity.getText();
        for(City c:state.getCitylist()){
            if(name.equals(c.getName())){
            JOptionPane.showMessageDialog(null,"Add city with different name!");
            return;
            }
        }
        City city = state.CreateandAddNewCity(name);
        
        populateTheThirdTable(state);
        }else
            JOptionPane.showMessageDialog(null,"Please select a row first!");
    }//GEN-LAST:event_btnaddcityActionPerformed

    private void btndeletecityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletecityActionPerformed
        // TODO add your handling code here:
        int selectedrow =tblcity.getSelectedRow();
        if(selectedrow >=0){
            City city = (City)tblcity.getValueAt(selectedrow, 1);
            State state = (State)tblcity.getValueAt(selectedrow, 0);
            
            state.getCitylist().remove(city);
            JOptionPane.showMessageDialog(null,"City deleted!");
            populateTheThirdTable(state);
        }
        else 
            JOptionPane.showMessageDialog(null,"Please select a row first!");
    }//GEN-LAST:event_btndeletecityActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnaddcity;
    private javax.swing.JButton btnaddcountry;
    private javax.swing.JButton btnaddstate;
    private javax.swing.JButton btndeletecity;
    private javax.swing.JButton btndeletecountry;
    private javax.swing.JButton btndeletestate;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable networkJTable;
    private javax.swing.JTable tblcity;
    private javax.swing.JTable tblstate;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcountryname;
    private javax.swing.JTextField txtstate;
    // End of variables declaration//GEN-END:variables
}
