/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ShelterInstituteWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Inventory.Inventory;
import Business.Inventory.ShelterInventory;
import Business.Organization.ShelterInstitute;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonateWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liulei
 */
public class ShelterDonateJPanel extends javax.swing.JPanel {
    
            JPanel userProcessContainer;
    DonateWorkRequest request;
    private EcoSystem system;
    private UserAccount userAccount;
    private ShelterInstitute si;
    private ArrayList<DonateWorkRequest> rd;
    private ArrayList<ShelterInventory> siList;

    /**
     * Creates new form ShelterDonateJPanel
     */
    
    ShelterDonateJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem system, ShelterInstitute shelterinstitute) {
        initComponents();
    this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = account;
        this.si = (ShelterInstitute) shelterinstitute;
        this.rd = new ArrayList<>();
        this.siList = new ArrayList<>();
        for(WorkRequest w : si.getWorkQueue().getWorkRequestList()){
            if(w.getType().equals("donate")){
                rd.add((DonateWorkRequest) w);
            }
        }
        
        for(Inventory i : si.getInventoryDirectory().getInventoryList()){
            siList.add((ShelterInventory) i);
        }
        populateTable();
        populateInventoryTable();
    }
    
    private void populateTable(){
         DefaultTableModel dtm = (DefaultTableModel)tblRequest.getModel();
        dtm.setRowCount(0);
         for (DonateWorkRequest dwr : rd)
        {     
            Object row[] = new Object[3];
            row[0] = dwr;
            row[1] = dwr.getQuantity();
            row[2] = dwr.getStatus();
            dtm.addRow(row);
        
        }
        
        
    }
    
    public void populateInventoryTable(){
        DefaultTableModel model = (DefaultTableModel)tblInventory.getModel();
        
        model.setRowCount(0);

        for(ShelterInventory si : siList){
            Object[] row = new Object[3];
            row[0] = si;
            row[1] = si.getTargetGender();
            row[2] = si.getInventory();
            model.addRow(row);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        tblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Target Gender", "Inventory"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInventory);
        if (tblInventory.getColumnModel().getColumnCount() > 0) {
            tblInventory.getColumnModel().getColumn(0).setResizable(false);
            tblInventory.getColumnModel().getColumn(1).setResizable(false);
            tblInventory.getColumnModel().getColumn(2).setResizable(false);
        }

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Shelter Institution Donation Work Area:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backJButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnConfirm))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(btnConfirm))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row First!");
        }
        else{
            DonateWorkRequest request = (DonateWorkRequest)tblRequest.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("Donate Completed")){
                JOptionPane.showMessageDialog(null, "This donation has been completed");
            }
            else
            {
                request.setReceiver(userAccount);
                request.setStatus("Donate Completed");
                String itemname = request.getItemName();
                int donatequantity = request.getQuantity();
                int points = request.getSender().getPoints();
                for(ShelterInventory si: siList){
                    if(si.getName().equals(itemname)){
                        int quantity = si.getInventory();
                        si.setInventory(quantity+donatequantity);
                    }
                    request.getSender().setPoints(donatequantity*20+points);
                    populateInventoryTable();
                    break;
                }
                populateTable();

                JOptionPane.showMessageDialog(null, "Successful!");
                btnConfirm.setEnabled(false);
            }
        }
        
    }//GEN-LAST:event_btnConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblInventory;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
