/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.UserWorkArea;

import Business.MyJPanel;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import Business.MapsData;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
/**
 *
 * @author linke
 */
public class MapsJPanel extends javax.swing.JPanel {
  private static final String CLIENT_ID = "yinruohua@gmail.com";
  private static final String CLIENT_SECRET = "74ec23fbdc684028a16d260165170cd8";
  private String jsonPayload;
// = "https://maps.googleapis.com/maps/api/staticmap?center=Brooklyn+Bridge,New+York,NY&zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C40.702147,-74.015794&markers=color:green%7Clabel:G%7C40.711614,-74.012318&markers=color:red%7Clabel:C%7C40.718217,-73.998284&key=AIzaSyDFQ_LC3EeIShTRhwBJivnWPF4xrvUhmi4";
  private int zoom = 15;
  private int width =600;
  private int height = 300;
  private JPanel userProcessContainer;
  
    /**
     * Creates new form MapsJPanel
     */
    public MapsJPanel(JPanel userProcessContainer,MapsData data) throws IOException{
        initComponents();
        this.userProcessContainer = userProcessContainer;
        data.setWidth(width);
        data.setHeight(height);
        data.setZoom(zoom);
        jsonPayload = translatrURL(data);
        String imageUrl = jsonPayload;
        String destinationFile = "src/images/image.jpg";
        saveImage(imageUrl, destinationFile);
    
        txtstreetnum.setText(String.valueOf(data.getStreetnum()));
        txtstreetname.setText(data.getStreetname());
        txtcity.setText(data.getCity());
        txtstate.setText(data.getState());
        txtcountry.setText(data.getCountry());
        txtzoom.setText(String.valueOf(data.getZoom()));
        
        ImageIcon icon = new ImageIcon(destinationFile);
        icon.setImage(icon.getImage().getScaledInstance(600,300,Image.SCALE_DEFAULT));
        image.setIcon(icon);
    }
    
    public static String translatrURL(MapsData data){
        
        int streetnum = data.getStreetnum();
        String streetname = data.getStreetname();
        String city = data.getCity();
        String state = data.getState();
        String country = data.getCountry();
        int zoom = data.getZoom();
        int width = data.getWidth();
        int height = data.getHeight();

        
        String jsonPayload = new StringBuilder()
        .append("http://maps.googleapis.com/maps/api/staticmap?center=")
        .append(streetnum)
        .append("+")
        .append(streetname)
        .append("+Steet,")
        .append(city)
        .append(",")
        .append(state)
        .append(",")
        .append(country)
        .append("&zoom=")
        .append(zoom)
        .append("&size=")
        .append(width)
        .append("x")
        .append(height)
        .append("&markers=color:blue%7Clabel:S%7C")
        .append(streetnum)
        .append("+")
        .append(streetname)
        .append(",")
        .append(city)
        .append(",")
        .append(state)
        .append(",")
        .append(country)
        .append("&key=AIzaSyDFQ_LC3EeIShTRhwBJivnWPF4xrvUhmi4")
        .toString();

        return jsonPayload;
    }

    public static void saveImage(String imageUrl, String destinationFile) throws IOException {
    URL url = new URL(imageUrl);
    InputStream is = url.openStream();
    OutputStream os = new FileOutputStream(destinationFile);

    byte[] b = new byte[2048];
    int length;

    while ((length = is.read(b)) != -1) {
        os.write(b, 0, length);
    }

    is.close();
    os.close();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtstreetnum = new javax.swing.JTextField();
        txtstreetname = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        txtcountry = new javax.swing.JTextField();
        txtstate = new javax.swing.JTextField();
        btnchange = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        zoomslider = new javax.swing.JSlider();
        txtzoom = new javax.swing.JTextField();

        jLabel9.setText("Address:");

        btnchange.setText("Change");
        btnchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchangeActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Zoom:");

        zoomslider.setMaximum(20);
        zoomslider.setMinimum(10);
        zoomslider.setMinorTickSpacing(1);
        zoomslider.setValue(15);
        zoomslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zoomsliderStateChanged(evt);
            }
        });

        txtzoom.setEditable(false);
        txtzoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtzoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(191, 191, 191)
                                .addComponent(btnchange, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(55, 55, 55)
                                    .addComponent(txtstreetnum, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(txtstreetname, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addComponent(jLabel10)
                                    .addGap(53, 53, 53)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(zoomslider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtzoom))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(20, 20, 20)
                                            .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, 0)
                                            .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addComponent(image))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(image)
                .addGap(244, 244, 244)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtstreetnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtstreetname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jLabel10)))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtzoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(zoomslider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(btnchange, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangeActionPerformed
        // TODO add your handling code here:
        int streetnum = Integer.parseInt(txtstreetnum.getText());
        String streetname = txtstreetname.getText();
        String city = txtcity.getText();
        String state = txtstate.getText();
        String country = txtcountry.getText();
        int zoom = zoomslider.getValue();
        MapsData mapsdata = new MapsData();
        mapsdata.setStreetnum(streetnum);
        mapsdata.setStreetname(streetname);
        mapsdata.setCity(city);
        mapsdata.setState(state);
        mapsdata.setCountry(country);
        mapsdata.setZoom(zoom);
        mapsdata.setWidth(600);
        mapsdata.setHeight(300);
        jsonPayload = translatrURL(mapsdata);
        String imageUrl = jsonPayload;
        String destinationFile = "src/images/image1.jpg";
      try {
          saveImage(imageUrl, destinationFile);
      } catch (IOException ex) {
          Logger.getLogger(MapsJPanel.class.getName()).log(Level.SEVERE, null, ex);
      }
        ImageIcon icon = new ImageIcon(destinationFile);
        icon.setImage(icon.getImage().getScaledInstance(600,300,Image.SCALE_DEFAULT));
        image.setIcon(icon);
    }//GEN-LAST:event_btnchangeActionPerformed

    private void zoomsliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zoomsliderStateChanged
        // TODO add your handling code here:
        int value=zoomslider.getValue();
        txtzoom.setText(String.valueOf(value));
    }//GEN-LAST:event_zoomsliderStateChanged

    private void txtzoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtzoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtzoomActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnchange;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcountry;
    private javax.swing.JTextField txtstate;
    private javax.swing.JTextField txtstreetname;
    private javax.swing.JTextField txtstreetnum;
    private javax.swing.JTextField txtzoom;
    private javax.swing.JSlider zoomslider;
    // End of variables declaration//GEN-END:variables
}
